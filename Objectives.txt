Class Exercise Lab

React Component Life Cycle

Each and every React Component involves various life cycle methods.

Program:

Create an App Component that has a header message msg -IamNEO and a button. The button click event changes the msg IamNEO to Welcome to React.

When doing this state value change activity explores the following life cycle methods and check the output in Console Screen.

componentWillMount() {        console.log('Component Will MOUNT!')     }     
componentDidMount() {        console.log('Component Did MOUNT!')     }     
componentWillReceiveProps(newProps) {  console.log('Component Will Recieve Props!')     }     
componentWillUpdate(nextProps, nextState) {        console.log('Component Will UPDATE!');     }    
componentDidUpdate(prevProps, prevState) {        console.log('Component Did UPDATE!')     }    
componentWillUnmount() {        console.log('Component Will UNMOUNT!')     } 

Lab Environment
In the project environment, there are two folders.

a. react - react folder is the read-only folder and has the project's test cases.
b. reactapp â€“ explore your code in this folder. you can use it for coding.
Default settings mapped to run the frontend application in PORT-8081:
The package.json file in reactapp folder is modified as: (Note -If not you can change it as below)
"scripts": {
"start": "PORT=8081 react-scripts start",
"build": "react-scripts build",
"test": "react-scripts test",
"eject": "react-scripts eject"}

To run the application:

Open the terminal - From Menu bar, select Terminal, then Open Terminal
Type the below commands to execute the react project
cd reactapp - command to open the folder
nvm use 14 - command to select the node version to 14
npm install - command to add the packages

[All packages are declared within package.json file]
npm start - command to run the application in PORT 8081
